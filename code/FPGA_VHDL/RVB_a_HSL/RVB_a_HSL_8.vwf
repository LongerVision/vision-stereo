/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2006 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	SIMULATION_TIME = 0.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 100.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("inRouge")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("inRouge[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "inRouge";
}

SIGNAL("inRouge[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "inRouge";
}

SIGNAL("inRouge[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "inRouge";
}

SIGNAL("inRouge[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "inRouge";
}

SIGNAL("inRouge[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "inRouge";
}

SIGNAL("inRouge[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "inRouge";
}

SIGNAL("inRouge[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "inRouge";
}

SIGNAL("inRouge[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "inRouge";
}

SIGNAL("inVert")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("inVert[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "inVert";
}

SIGNAL("inVert[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "inVert";
}

SIGNAL("inVert[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "inVert";
}

SIGNAL("inVert[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "inVert";
}

SIGNAL("inVert[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "inVert";
}

SIGNAL("inVert[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "inVert";
}

SIGNAL("inVert[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "inVert";
}

SIGNAL("inVert[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "inVert";
}

SIGNAL("inBleu")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("inBleu[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "inBleu";
}

SIGNAL("inBleu[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "inBleu";
}

SIGNAL("inBleu[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "inBleu";
}

SIGNAL("inBleu[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "inBleu";
}

SIGNAL("inBleu[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "inBleu";
}

SIGNAL("inBleu[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "inBleu";
}

SIGNAL("inBleu[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "inBleu";
}

SIGNAL("inBleu[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "inBleu";
}

SIGNAL("Clock")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("nReset")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("outLuminance")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("outLuminance[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "outLuminance";
}

SIGNAL("outLuminance[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "outLuminance";
}

SIGNAL("outLuminance[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "outLuminance";
}

SIGNAL("outLuminance[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "outLuminance";
}

SIGNAL("outLuminance[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "outLuminance";
}

SIGNAL("outLuminance[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "outLuminance";
}

SIGNAL("outLuminance[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "outLuminance";
}

SIGNAL("outLuminance[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "outLuminance";
}

SIGNAL("outSaturation")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("outSaturation[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "outSaturation";
}

SIGNAL("outSaturation[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "outSaturation";
}

SIGNAL("outSaturation[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "outSaturation";
}

SIGNAL("outSaturation[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "outSaturation";
}

SIGNAL("outSaturation[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "outSaturation";
}

SIGNAL("outSaturation[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "outSaturation";
}

SIGNAL("outSaturation[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "outSaturation";
}

SIGNAL("outSaturation[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "outSaturation";
}

SIGNAL("outSyncVHP")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 3;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("outSyncVHP[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "outSyncVHP";
}

SIGNAL("outSyncVHP[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "outSyncVHP";
}

SIGNAL("outSyncVHP[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "outSyncVHP";
}

SIGNAL("outRouge")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("outRouge[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "outRouge";
}

SIGNAL("outRouge[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "outRouge";
}

SIGNAL("outRouge[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "outRouge";
}

SIGNAL("outRouge[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "outRouge";
}

SIGNAL("outRouge[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "outRouge";
}

SIGNAL("outRouge[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "outRouge";
}

SIGNAL("outRouge[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "outRouge";
}

SIGNAL("outRouge[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "outRouge";
}

SIGNAL("outVert")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("outVert[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "outVert";
}

SIGNAL("outVert[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "outVert";
}

SIGNAL("outVert[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "outVert";
}

SIGNAL("outVert[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "outVert";
}

SIGNAL("outVert[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "outVert";
}

SIGNAL("outVert[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "outVert";
}

SIGNAL("outVert[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "outVert";
}

SIGNAL("outVert[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "outVert";
}

SIGNAL("outBleu")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("outBleu[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "outBleu";
}

SIGNAL("outBleu[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "outBleu";
}

SIGNAL("outBleu[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "outBleu";
}

SIGNAL("outBleu[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "outBleu";
}

SIGNAL("outBleu[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "outBleu";
}

SIGNAL("outBleu[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "outBleu";
}

SIGNAL("outBleu[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "outBleu";
}

SIGNAL("outBleu[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "outBleu";
}

SIGNAL("outTeinte")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("outTeinte[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "outTeinte";
}

SIGNAL("outTeinte[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "outTeinte";
}

SIGNAL("outTeinte[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "outTeinte";
}

SIGNAL("outTeinte[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "outTeinte";
}

SIGNAL("outTeinte[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "outTeinte";
}

SIGNAL("outTeinte[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "outTeinte";
}

SIGNAL("outTeinte[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "outTeinte";
}

SIGNAL("outTeinte[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "outTeinte";
}

SIGNAL("inSyncVHP")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 3;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("inSyncVHP[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "inSyncVHP";
}

SIGNAL("inSyncVHP[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "inSyncVHP";
}

SIGNAL("inSyncVHP[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "inSyncVHP";
}

TRANSITION_LIST("inRouge[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 200.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
		}
		LEVEL 1 FOR 200.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
		}
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 4000.0;
	}
}

TRANSITION_LIST("inRouge[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 900.0;
		LEVEL 0 FOR 900.0;
		LEVEL 1 FOR 900.0;
		LEVEL 0 FOR 4700.0;
	}
}

TRANSITION_LIST("inRouge[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 500.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 400.0;
			LEVEL 0 FOR 500.0;
		}
		LEVEL 1 FOR 500.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 4000.0;
	}
}

TRANSITION_LIST("inRouge[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 300.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 200.0;
			LEVEL 0 FOR 200.0;
			LEVEL 1 FOR 300.0;
			LEVEL 0 FOR 200.0;
		}
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 4200.0;
	}
}

TRANSITION_LIST("inRouge[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 100.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
		}
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 200.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
		}
		LEVEL 0 FOR 200.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
		}
		LEVEL 1 FOR 200.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
		}
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 4100.0;
	}
}

TRANSITION_LIST("inRouge[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 700.0;
		LEVEL 1 FOR 400.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 400.0;
			LEVEL 1 FOR 400.0;
		}
		LEVEL 0 FOR 4300.0;
	}
}

TRANSITION_LIST("inRouge[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 500.0;
		LEVEL 1 FOR 200.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 0 FOR 200.0;
			LEVEL 1 FOR 200.0;
		}
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 4100.0;
	}
}

TRANSITION_LIST("inRouge[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 100.0;
		NODE
		{
			REPEAT = 16;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
		}
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 4000.0;
	}
}

TRANSITION_LIST("inVert[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 200.0;
			LEVEL 1 FOR 100.0;
		}
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 200.0;
		}
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 4100.0;
	}
}

TRANSITION_LIST("inVert[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 200.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 200.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 200.0;
			LEVEL 0 FOR 100.0;
		}
		LEVEL 1 FOR 200.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 200.0;
			LEVEL 1 FOR 100.0;
		}
		LEVEL 0 FOR 4000.0;
	}
}

TRANSITION_LIST("inVert[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 200.0;
		}
		LEVEL 1 FOR 100.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 200.0;
		}
		LEVEL 0 FOR 100.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 200.0;
		}
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 100.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 200.0;
		}
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 4000.0;
	}
}

TRANSITION_LIST("inVert[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 100.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 200.0;
			LEVEL 0 FOR 200.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 200.0;
			LEVEL 1 FOR 200.0;
			LEVEL 0 FOR 200.0;
		}
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 4100.0;
	}
}

TRANSITION_LIST("inVert[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 100.0;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
		}
		LEVEL 0 FOR 200.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
		}
		LEVEL 1 FOR 200.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
		}
		LEVEL 0 FOR 200.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
		}
		LEVEL 1 FOR 200.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
		}
		LEVEL 0 FOR 4100.0;
	}
}

TRANSITION_LIST("inVert[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 400.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 400.0;
			LEVEL 0 FOR 400.0;
		}
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 4000.0;
	}
}

TRANSITION_LIST("inVert[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 100.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 200.0;
			LEVEL 1 FOR 200.0;
		}
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 4000.0;
	}
}

TRANSITION_LIST("inVert[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 200.0;
		NODE
		{
			REPEAT = 17;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
		}
		LEVEL 1 FOR 4100.0;
	}
}

TRANSITION_LIST("inBleu[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 600.0;
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 300.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 300.0;
			LEVEL 0 FOR 200.0;
		}
		LEVEL 1 FOR 300.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 300.0;
			LEVEL 1 FOR 200.0;
		}
		LEVEL 0 FOR 4100.0;
	}
}

TRANSITION_LIST("inBleu[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 700.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 200.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 200.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 200.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 200.0;
			LEVEL 1 FOR 100.0;
		}
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 4000.0;
	}
}

TRANSITION_LIST("inBleu[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 600.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 200.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 200.0;
			LEVEL 0 FOR 200.0;
		}
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 300.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 200.0;
			LEVEL 0 FOR 200.0;
		}
		LEVEL 1 FOR 300.0;
		LEVEL 0 FOR 4200.0;
	}
}

TRANSITION_LIST("inBleu[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 600.0;
		LEVEL 1 FOR 100.0;
		NODE
		{
			REPEAT = 6;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
		}
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 200.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
		}
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 4000.0;
	}
}

TRANSITION_LIST("inBleu[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1300.0;
		LEVEL 1 FOR 800.0;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 800.0;
			LEVEL 1 FOR 800.0;
		}
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 4000.0;
	}
}

TRANSITION_LIST("inBleu[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 900.0;
		LEVEL 1 FOR 400.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 400.0;
			LEVEL 1 FOR 400.0;
		}
		LEVEL 0 FOR 4300.0;
	}
}

TRANSITION_LIST("inBleu[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 700.0;
		LEVEL 1 FOR 200.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 0 FOR 200.0;
			LEVEL 1 FOR 200.0;
		}
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 4100.0;
	}
}

TRANSITION_LIST("inBleu[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 600.0;
		LEVEL 1 FOR 100.0;
		NODE
		{
			REPEAT = 16;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
		}
		LEVEL 0 FOR 4100.0;
	}
}

TRANSITION_LIST("Clock")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 50.0;
		NODE
		{
			REPEAT = 79;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
		}
		LEVEL 0 FOR 50.0;
	}
}

TRANSITION_LIST("nReset")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 7900.0;
	}
}

TRANSITION_LIST("outLuminance[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 8000.0;
	}
}

TRANSITION_LIST("outLuminance[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 8000.0;
	}
}

TRANSITION_LIST("outLuminance[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 8000.0;
	}
}

TRANSITION_LIST("outLuminance[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 8000.0;
	}
}

TRANSITION_LIST("outLuminance[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 8000.0;
	}
}

TRANSITION_LIST("outLuminance[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 8000.0;
	}
}

TRANSITION_LIST("outLuminance[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 8000.0;
	}
}

TRANSITION_LIST("outLuminance[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 8000.0;
	}
}

TRANSITION_LIST("outSaturation[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 8000.0;
	}
}

TRANSITION_LIST("outSaturation[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 8000.0;
	}
}

TRANSITION_LIST("outSaturation[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 8000.0;
	}
}

TRANSITION_LIST("outSaturation[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 8000.0;
	}
}

TRANSITION_LIST("outSaturation[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 8000.0;
	}
}

TRANSITION_LIST("outSaturation[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 8000.0;
	}
}

TRANSITION_LIST("outSaturation[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 8000.0;
	}
}

TRANSITION_LIST("outSaturation[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 8000.0;
	}
}

TRANSITION_LIST("outSyncVHP[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 8000.0;
	}
}

TRANSITION_LIST("outSyncVHP[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 8000.0;
	}
}

TRANSITION_LIST("outSyncVHP[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 8000.0;
	}
}

TRANSITION_LIST("outRouge[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 8000.0;
	}
}

TRANSITION_LIST("outRouge[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 8000.0;
	}
}

TRANSITION_LIST("outRouge[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 8000.0;
	}
}

TRANSITION_LIST("outRouge[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 8000.0;
	}
}

TRANSITION_LIST("outRouge[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 8000.0;
	}
}

TRANSITION_LIST("outRouge[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 8000.0;
	}
}

TRANSITION_LIST("outRouge[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 8000.0;
	}
}

TRANSITION_LIST("outRouge[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 8000.0;
	}
}

TRANSITION_LIST("outVert[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 8000.0;
	}
}

TRANSITION_LIST("outVert[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 8000.0;
	}
}

TRANSITION_LIST("outVert[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 8000.0;
	}
}

TRANSITION_LIST("outVert[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 8000.0;
	}
}

TRANSITION_LIST("outVert[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 8000.0;
	}
}

TRANSITION_LIST("outVert[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 8000.0;
	}
}

TRANSITION_LIST("outVert[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 8000.0;
	}
}

TRANSITION_LIST("outVert[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 8000.0;
	}
}

TRANSITION_LIST("outBleu[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 8000.0;
	}
}

TRANSITION_LIST("outBleu[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 8000.0;
	}
}

TRANSITION_LIST("outBleu[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 8000.0;
	}
}

TRANSITION_LIST("outBleu[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 8000.0;
	}
}

TRANSITION_LIST("outBleu[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 8000.0;
	}
}

TRANSITION_LIST("outBleu[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 8000.0;
	}
}

TRANSITION_LIST("outBleu[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 8000.0;
	}
}

TRANSITION_LIST("outBleu[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 8000.0;
	}
}

TRANSITION_LIST("outTeinte[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 8000.0;
	}
}

TRANSITION_LIST("outTeinte[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 8000.0;
	}
}

TRANSITION_LIST("outTeinte[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 8000.0;
	}
}

TRANSITION_LIST("outTeinte[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 8000.0;
	}
}

TRANSITION_LIST("outTeinte[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 8000.0;
	}
}

TRANSITION_LIST("outTeinte[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 8000.0;
	}
}

TRANSITION_LIST("outTeinte[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 8000.0;
	}
}

TRANSITION_LIST("outTeinte[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 8000.0;
	}
}

TRANSITION_LIST("inSyncVHP[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 8000.0;
	}
}

TRANSITION_LIST("inSyncVHP[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 200.0;
		NODE
		{
			REPEAT = 9;
			LEVEL 0 FOR 200.0;
			LEVEL 1 FOR 200.0;
		}
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 4000.0;
	}
}

TRANSITION_LIST("inSyncVHP[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 100.0;
		NODE
		{
			REPEAT = 19;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
		}
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 4000.0;
	}
}

DISPLAY_LINE
{
	CHANNEL = "Clock";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "nReset";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "inSyncVHP";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
	CHILDREN = 3, 4, 5;
}

DISPLAY_LINE
{
	CHANNEL = "inSyncVHP[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "inSyncVHP[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "inSyncVHP[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "inRouge";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 6;
	TREE_LEVEL = 0;
	CHILDREN = 7, 8, 9, 10, 11, 12, 13, 14;
}

DISPLAY_LINE
{
	CHANNEL = "inRouge[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "inRouge[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "inRouge[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "inRouge[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "inRouge[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "inRouge[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "inRouge[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "inRouge[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "inVert";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 15;
	TREE_LEVEL = 0;
	CHILDREN = 16, 17, 18, 19, 20, 21, 22, 23;
}

DISPLAY_LINE
{
	CHANNEL = "inVert[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 15;
}

DISPLAY_LINE
{
	CHANNEL = "inVert[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 15;
}

DISPLAY_LINE
{
	CHANNEL = "inVert[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 15;
}

DISPLAY_LINE
{
	CHANNEL = "inVert[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 15;
}

DISPLAY_LINE
{
	CHANNEL = "inVert[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 15;
}

DISPLAY_LINE
{
	CHANNEL = "inVert[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 15;
}

DISPLAY_LINE
{
	CHANNEL = "inVert[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 15;
}

DISPLAY_LINE
{
	CHANNEL = "inVert[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 15;
}

DISPLAY_LINE
{
	CHANNEL = "inBleu";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 24;
	TREE_LEVEL = 0;
	CHILDREN = 25, 26, 27, 28, 29, 30, 31, 32;
}

DISPLAY_LINE
{
	CHANNEL = "inBleu[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 24;
}

DISPLAY_LINE
{
	CHANNEL = "inBleu[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 24;
}

DISPLAY_LINE
{
	CHANNEL = "inBleu[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 27;
	TREE_LEVEL = 1;
	PARENT = 24;
}

DISPLAY_LINE
{
	CHANNEL = "inBleu[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 28;
	TREE_LEVEL = 1;
	PARENT = 24;
}

DISPLAY_LINE
{
	CHANNEL = "inBleu[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 29;
	TREE_LEVEL = 1;
	PARENT = 24;
}

DISPLAY_LINE
{
	CHANNEL = "inBleu[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 30;
	TREE_LEVEL = 1;
	PARENT = 24;
}

DISPLAY_LINE
{
	CHANNEL = "inBleu[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 31;
	TREE_LEVEL = 1;
	PARENT = 24;
}

DISPLAY_LINE
{
	CHANNEL = "inBleu[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 32;
	TREE_LEVEL = 1;
	PARENT = 24;
}

DISPLAY_LINE
{
	CHANNEL = "outSyncVHP";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 33;
	TREE_LEVEL = 0;
	CHILDREN = 34, 35, 36;
}

DISPLAY_LINE
{
	CHANNEL = "outSyncVHP[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 34;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "outSyncVHP[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 35;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "outSyncVHP[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 36;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "outRouge";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 37;
	TREE_LEVEL = 0;
	CHILDREN = 38, 39, 40, 41, 42, 43, 44, 45;
}

DISPLAY_LINE
{
	CHANNEL = "outRouge[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 38;
	TREE_LEVEL = 1;
	PARENT = 37;
}

DISPLAY_LINE
{
	CHANNEL = "outRouge[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 39;
	TREE_LEVEL = 1;
	PARENT = 37;
}

DISPLAY_LINE
{
	CHANNEL = "outRouge[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 40;
	TREE_LEVEL = 1;
	PARENT = 37;
}

DISPLAY_LINE
{
	CHANNEL = "outRouge[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 41;
	TREE_LEVEL = 1;
	PARENT = 37;
}

DISPLAY_LINE
{
	CHANNEL = "outRouge[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 42;
	TREE_LEVEL = 1;
	PARENT = 37;
}

DISPLAY_LINE
{
	CHANNEL = "outRouge[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 43;
	TREE_LEVEL = 1;
	PARENT = 37;
}

DISPLAY_LINE
{
	CHANNEL = "outRouge[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 44;
	TREE_LEVEL = 1;
	PARENT = 37;
}

DISPLAY_LINE
{
	CHANNEL = "outRouge[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 45;
	TREE_LEVEL = 1;
	PARENT = 37;
}

DISPLAY_LINE
{
	CHANNEL = "outVert";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 46;
	TREE_LEVEL = 0;
	CHILDREN = 47, 48, 49, 50, 51, 52, 53, 54;
}

DISPLAY_LINE
{
	CHANNEL = "outVert[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 47;
	TREE_LEVEL = 1;
	PARENT = 46;
}

DISPLAY_LINE
{
	CHANNEL = "outVert[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 48;
	TREE_LEVEL = 1;
	PARENT = 46;
}

DISPLAY_LINE
{
	CHANNEL = "outVert[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 49;
	TREE_LEVEL = 1;
	PARENT = 46;
}

DISPLAY_LINE
{
	CHANNEL = "outVert[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 50;
	TREE_LEVEL = 1;
	PARENT = 46;
}

DISPLAY_LINE
{
	CHANNEL = "outVert[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 51;
	TREE_LEVEL = 1;
	PARENT = 46;
}

DISPLAY_LINE
{
	CHANNEL = "outVert[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 52;
	TREE_LEVEL = 1;
	PARENT = 46;
}

DISPLAY_LINE
{
	CHANNEL = "outVert[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 53;
	TREE_LEVEL = 1;
	PARENT = 46;
}

DISPLAY_LINE
{
	CHANNEL = "outVert[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 54;
	TREE_LEVEL = 1;
	PARENT = 46;
}

DISPLAY_LINE
{
	CHANNEL = "outBleu";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 55;
	TREE_LEVEL = 0;
	CHILDREN = 56, 57, 58, 59, 60, 61, 62, 63;
}

DISPLAY_LINE
{
	CHANNEL = "outBleu[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 56;
	TREE_LEVEL = 1;
	PARENT = 55;
}

DISPLAY_LINE
{
	CHANNEL = "outBleu[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 57;
	TREE_LEVEL = 1;
	PARENT = 55;
}

DISPLAY_LINE
{
	CHANNEL = "outBleu[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 58;
	TREE_LEVEL = 1;
	PARENT = 55;
}

DISPLAY_LINE
{
	CHANNEL = "outBleu[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 59;
	TREE_LEVEL = 1;
	PARENT = 55;
}

DISPLAY_LINE
{
	CHANNEL = "outBleu[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 60;
	TREE_LEVEL = 1;
	PARENT = 55;
}

DISPLAY_LINE
{
	CHANNEL = "outBleu[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 61;
	TREE_LEVEL = 1;
	PARENT = 55;
}

DISPLAY_LINE
{
	CHANNEL = "outBleu[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 62;
	TREE_LEVEL = 1;
	PARENT = 55;
}

DISPLAY_LINE
{
	CHANNEL = "outBleu[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 63;
	TREE_LEVEL = 1;
	PARENT = 55;
}

DISPLAY_LINE
{
	CHANNEL = "outTeinte";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 64;
	TREE_LEVEL = 0;
	CHILDREN = 65, 66, 67, 68, 69, 70, 71, 72;
}

DISPLAY_LINE
{
	CHANNEL = "outTeinte[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 65;
	TREE_LEVEL = 1;
	PARENT = 64;
}

DISPLAY_LINE
{
	CHANNEL = "outTeinte[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 66;
	TREE_LEVEL = 1;
	PARENT = 64;
}

DISPLAY_LINE
{
	CHANNEL = "outTeinte[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 67;
	TREE_LEVEL = 1;
	PARENT = 64;
}

DISPLAY_LINE
{
	CHANNEL = "outTeinte[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 68;
	TREE_LEVEL = 1;
	PARENT = 64;
}

DISPLAY_LINE
{
	CHANNEL = "outTeinte[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 69;
	TREE_LEVEL = 1;
	PARENT = 64;
}

DISPLAY_LINE
{
	CHANNEL = "outTeinte[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 70;
	TREE_LEVEL = 1;
	PARENT = 64;
}

DISPLAY_LINE
{
	CHANNEL = "outTeinte[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 71;
	TREE_LEVEL = 1;
	PARENT = 64;
}

DISPLAY_LINE
{
	CHANNEL = "outTeinte[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 72;
	TREE_LEVEL = 1;
	PARENT = 64;
}

DISPLAY_LINE
{
	CHANNEL = "outSaturation";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 73;
	TREE_LEVEL = 0;
	CHILDREN = 74, 75, 76, 77, 78, 79, 80, 81;
}

DISPLAY_LINE
{
	CHANNEL = "outSaturation[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 74;
	TREE_LEVEL = 1;
	PARENT = 73;
}

DISPLAY_LINE
{
	CHANNEL = "outSaturation[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 75;
	TREE_LEVEL = 1;
	PARENT = 73;
}

DISPLAY_LINE
{
	CHANNEL = "outSaturation[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 76;
	TREE_LEVEL = 1;
	PARENT = 73;
}

DISPLAY_LINE
{
	CHANNEL = "outSaturation[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 77;
	TREE_LEVEL = 1;
	PARENT = 73;
}

DISPLAY_LINE
{
	CHANNEL = "outSaturation[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 78;
	TREE_LEVEL = 1;
	PARENT = 73;
}

DISPLAY_LINE
{
	CHANNEL = "outSaturation[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 79;
	TREE_LEVEL = 1;
	PARENT = 73;
}

DISPLAY_LINE
{
	CHANNEL = "outSaturation[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 80;
	TREE_LEVEL = 1;
	PARENT = 73;
}

DISPLAY_LINE
{
	CHANNEL = "outSaturation[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 81;
	TREE_LEVEL = 1;
	PARENT = 73;
}

DISPLAY_LINE
{
	CHANNEL = "outLuminance";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 82;
	TREE_LEVEL = 0;
	CHILDREN = 83, 84, 85, 86, 87, 88, 89, 90;
}

DISPLAY_LINE
{
	CHANNEL = "outLuminance[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 83;
	TREE_LEVEL = 1;
	PARENT = 82;
}

DISPLAY_LINE
{
	CHANNEL = "outLuminance[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 84;
	TREE_LEVEL = 1;
	PARENT = 82;
}

DISPLAY_LINE
{
	CHANNEL = "outLuminance[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 85;
	TREE_LEVEL = 1;
	PARENT = 82;
}

DISPLAY_LINE
{
	CHANNEL = "outLuminance[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 86;
	TREE_LEVEL = 1;
	PARENT = 82;
}

DISPLAY_LINE
{
	CHANNEL = "outLuminance[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 87;
	TREE_LEVEL = 1;
	PARENT = 82;
}

DISPLAY_LINE
{
	CHANNEL = "outLuminance[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 88;
	TREE_LEVEL = 1;
	PARENT = 82;
}

DISPLAY_LINE
{
	CHANNEL = "outLuminance[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 89;
	TREE_LEVEL = 1;
	PARENT = 82;
}

DISPLAY_LINE
{
	CHANNEL = "outLuminance[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 90;
	TREE_LEVEL = 1;
	PARENT = 82;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}
;
