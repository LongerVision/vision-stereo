/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2006 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	SIMULATION_TIME = 0.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 20.83;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("Clock24MHz")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("inSecondes")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 14;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("inSecondes[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "inSecondes";
}

SIGNAL("inSecondes[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "inSecondes";
}

SIGNAL("inSecondes[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "inSecondes";
}

SIGNAL("inSecondes[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "inSecondes";
}

SIGNAL("inSecondes[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "inSecondes";
}

SIGNAL("inSecondes[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "inSecondes";
}

SIGNAL("inSecondes[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "inSecondes";
}

SIGNAL("inSecondes[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "inSecondes";
}

SIGNAL("inSecondes[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "inSecondes";
}

SIGNAL("inSecondes[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "inSecondes";
}

SIGNAL("inSecondes[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "inSecondes";
}

SIGNAL("inSecondes[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "inSecondes";
}

SIGNAL("inSecondes[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "inSecondes";
}

SIGNAL("inSecondes[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "inSecondes";
}

SIGNAL("inSyncTemp")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("nReset")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("outImpSeconde")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("outSyncTemp")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("sDecompte24MHz")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 27;
	LSB_INDEX = 0;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("sDecompte24MHz[26]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sDecompte24MHz";
}

SIGNAL("sDecompte24MHz[25]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sDecompte24MHz";
}

SIGNAL("sDecompte24MHz[24]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sDecompte24MHz";
}

SIGNAL("sDecompte24MHz[23]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sDecompte24MHz";
}

SIGNAL("sDecompte24MHz[22]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sDecompte24MHz";
}

SIGNAL("sDecompte24MHz[21]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sDecompte24MHz";
}

SIGNAL("sDecompte24MHz[20]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sDecompte24MHz";
}

SIGNAL("sDecompte24MHz[19]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sDecompte24MHz";
}

SIGNAL("sDecompte24MHz[18]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sDecompte24MHz";
}

SIGNAL("sDecompte24MHz[17]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sDecompte24MHz";
}

SIGNAL("sDecompte24MHz[16]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sDecompte24MHz";
}

SIGNAL("sDecompte24MHz[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sDecompte24MHz";
}

SIGNAL("sDecompte24MHz[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sDecompte24MHz";
}

SIGNAL("sDecompte24MHz[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sDecompte24MHz";
}

SIGNAL("sDecompte24MHz[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sDecompte24MHz";
}

SIGNAL("sDecompte24MHz[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sDecompte24MHz";
}

SIGNAL("sDecompte24MHz[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sDecompte24MHz";
}

SIGNAL("sDecompte24MHz[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sDecompte24MHz";
}

SIGNAL("sDecompte24MHz[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sDecompte24MHz";
}

SIGNAL("sDecompte24MHz[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sDecompte24MHz";
}

SIGNAL("sDecompte24MHz[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sDecompte24MHz";
}

SIGNAL("sDecompte24MHz[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sDecompte24MHz";
}

SIGNAL("sDecompte24MHz[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sDecompte24MHz";
}

SIGNAL("sDecompte24MHz[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sDecompte24MHz";
}

SIGNAL("sDecompte24MHz[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sDecompte24MHz";
}

SIGNAL("sDecompte24MHz[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sDecompte24MHz";
}

SIGNAL("sDecompte24MHz[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sDecompte24MHz";
}

SIGNAL("sDecompteSeconde")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 14;
	LSB_INDEX = 0;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("sDecompteSeconde[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sDecompteSeconde";
}

SIGNAL("sDecompteSeconde[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sDecompteSeconde";
}

SIGNAL("sDecompteSeconde[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sDecompteSeconde";
}

SIGNAL("sDecompteSeconde[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sDecompteSeconde";
}

SIGNAL("sDecompteSeconde[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sDecompteSeconde";
}

SIGNAL("sDecompteSeconde[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sDecompteSeconde";
}

SIGNAL("sDecompteSeconde[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sDecompteSeconde";
}

SIGNAL("sDecompteSeconde[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sDecompteSeconde";
}

SIGNAL("sDecompteSeconde[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sDecompteSeconde";
}

SIGNAL("sDecompteSeconde[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sDecompteSeconde";
}

SIGNAL("sDecompteSeconde[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sDecompteSeconde";
}

SIGNAL("sDecompteSeconde[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sDecompteSeconde";
}

SIGNAL("sDecompteSeconde[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sDecompteSeconde";
}

SIGNAL("sDecompteSeconde[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "sDecompteSeconde";
}

SIGNAL("sEtatTemp")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "";
}

TRANSITION_LIST("Clock24MHz")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 10.415;
		NODE
		{
			REPEAT = 4800;
			LEVEL 0 FOR 10.415;
			LEVEL 1 FOR 10.415;
		}
		LEVEL 0 FOR 5.585;
	}
}

TRANSITION_LIST("inSecondes[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("inSecondes[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("inSecondes[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("inSecondes[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("inSecondes[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("inSecondes[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("inSecondes[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("inSecondes[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("inSecondes[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("inSecondes[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("inSecondes[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("inSecondes[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 100000.0;
	}
}

TRANSITION_LIST("inSecondes[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("inSecondes[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 100000.0;
	}
}

TRANSITION_LIST("inSyncTemp")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 100000.0;
	}
}

TRANSITION_LIST("nReset")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 20.83;
		LEVEL 1 FOR 99979.17;
	}
}

TRANSITION_LIST("outImpSeconde")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 100000.0;
	}
}

TRANSITION_LIST("outSyncTemp")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 100000.0;
	}
}

TRANSITION_LIST("sDecompte24MHz[26]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 100000.0;
	}
}

TRANSITION_LIST("sDecompte24MHz[25]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 100000.0;
	}
}

TRANSITION_LIST("sDecompte24MHz[24]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 100000.0;
	}
}

TRANSITION_LIST("sDecompte24MHz[23]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 100000.0;
	}
}

TRANSITION_LIST("sDecompte24MHz[22]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 100000.0;
	}
}

TRANSITION_LIST("sDecompte24MHz[21]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 100000.0;
	}
}

TRANSITION_LIST("sDecompte24MHz[20]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 100000.0;
	}
}

TRANSITION_LIST("sDecompte24MHz[19]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 100000.0;
	}
}

TRANSITION_LIST("sDecompte24MHz[18]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 100000.0;
	}
}

TRANSITION_LIST("sDecompte24MHz[17]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 100000.0;
	}
}

TRANSITION_LIST("sDecompte24MHz[16]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 100000.0;
	}
}

TRANSITION_LIST("sDecompte24MHz[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 100000.0;
	}
}

TRANSITION_LIST("sDecompte24MHz[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 100000.0;
	}
}

TRANSITION_LIST("sDecompte24MHz[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 100000.0;
	}
}

TRANSITION_LIST("sDecompte24MHz[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 100000.0;
	}
}

TRANSITION_LIST("sDecompte24MHz[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 100000.0;
	}
}

TRANSITION_LIST("sDecompte24MHz[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 100000.0;
	}
}

TRANSITION_LIST("sDecompte24MHz[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 100000.0;
	}
}

TRANSITION_LIST("sDecompte24MHz[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 100000.0;
	}
}

TRANSITION_LIST("sDecompte24MHz[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 100000.0;
	}
}

TRANSITION_LIST("sDecompte24MHz[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 100000.0;
	}
}

TRANSITION_LIST("sDecompte24MHz[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 100000.0;
	}
}

TRANSITION_LIST("sDecompte24MHz[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 100000.0;
	}
}

TRANSITION_LIST("sDecompte24MHz[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 100000.0;
	}
}

TRANSITION_LIST("sDecompte24MHz[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 100000.0;
	}
}

TRANSITION_LIST("sDecompte24MHz[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 100000.0;
	}
}

TRANSITION_LIST("sDecompte24MHz[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 100000.0;
	}
}

TRANSITION_LIST("sDecompteSeconde[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 100000.0;
	}
}

TRANSITION_LIST("sDecompteSeconde[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 100000.0;
	}
}

TRANSITION_LIST("sDecompteSeconde[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 100000.0;
	}
}

TRANSITION_LIST("sDecompteSeconde[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 100000.0;
	}
}

TRANSITION_LIST("sDecompteSeconde[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 100000.0;
	}
}

TRANSITION_LIST("sDecompteSeconde[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 100000.0;
	}
}

TRANSITION_LIST("sDecompteSeconde[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 100000.0;
	}
}

TRANSITION_LIST("sDecompteSeconde[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 100000.0;
	}
}

TRANSITION_LIST("sDecompteSeconde[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 100000.0;
	}
}

TRANSITION_LIST("sDecompteSeconde[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 100000.0;
	}
}

TRANSITION_LIST("sDecompteSeconde[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 100000.0;
	}
}

TRANSITION_LIST("sDecompteSeconde[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 100000.0;
	}
}

TRANSITION_LIST("sDecompteSeconde[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 100000.0;
	}
}

TRANSITION_LIST("sDecompteSeconde[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 100000.0;
	}
}

TRANSITION_LIST("sEtatTemp")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 100000.0;
	}
}

DISPLAY_LINE
{
	CHANNEL = "Clock24MHz";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "nReset";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "sDecompte24MHz";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
	CHILDREN = 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29;
}

DISPLAY_LINE
{
	CHANNEL = "sDecompte24MHz[26]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "sDecompte24MHz[25]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "sDecompte24MHz[24]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "sDecompte24MHz[23]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "sDecompte24MHz[22]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "sDecompte24MHz[21]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "sDecompte24MHz[20]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "sDecompte24MHz[19]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "sDecompte24MHz[18]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "sDecompte24MHz[17]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "sDecompte24MHz[16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "sDecompte24MHz[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "sDecompte24MHz[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "sDecompte24MHz[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "sDecompte24MHz[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "sDecompte24MHz[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "sDecompte24MHz[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "sDecompte24MHz[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "sDecompte24MHz[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "sDecompte24MHz[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "sDecompte24MHz[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "sDecompte24MHz[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 24;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "sDecompte24MHz[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "sDecompte24MHz[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "sDecompte24MHz[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 27;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "sDecompte24MHz[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 28;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "sDecompte24MHz[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 29;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "sDecompteSeconde";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 30;
	TREE_LEVEL = 0;
	CHILDREN = 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44;
}

DISPLAY_LINE
{
	CHANNEL = "sDecompteSeconde[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 31;
	TREE_LEVEL = 1;
	PARENT = 30;
}

DISPLAY_LINE
{
	CHANNEL = "sDecompteSeconde[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 32;
	TREE_LEVEL = 1;
	PARENT = 30;
}

DISPLAY_LINE
{
	CHANNEL = "sDecompteSeconde[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 33;
	TREE_LEVEL = 1;
	PARENT = 30;
}

DISPLAY_LINE
{
	CHANNEL = "sDecompteSeconde[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 34;
	TREE_LEVEL = 1;
	PARENT = 30;
}

DISPLAY_LINE
{
	CHANNEL = "sDecompteSeconde[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 35;
	TREE_LEVEL = 1;
	PARENT = 30;
}

DISPLAY_LINE
{
	CHANNEL = "sDecompteSeconde[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 36;
	TREE_LEVEL = 1;
	PARENT = 30;
}

DISPLAY_LINE
{
	CHANNEL = "sDecompteSeconde[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 37;
	TREE_LEVEL = 1;
	PARENT = 30;
}

DISPLAY_LINE
{
	CHANNEL = "sDecompteSeconde[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 38;
	TREE_LEVEL = 1;
	PARENT = 30;
}

DISPLAY_LINE
{
	CHANNEL = "sDecompteSeconde[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 39;
	TREE_LEVEL = 1;
	PARENT = 30;
}

DISPLAY_LINE
{
	CHANNEL = "sDecompteSeconde[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 40;
	TREE_LEVEL = 1;
	PARENT = 30;
}

DISPLAY_LINE
{
	CHANNEL = "sDecompteSeconde[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 41;
	TREE_LEVEL = 1;
	PARENT = 30;
}

DISPLAY_LINE
{
	CHANNEL = "sDecompteSeconde[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 42;
	TREE_LEVEL = 1;
	PARENT = 30;
}

DISPLAY_LINE
{
	CHANNEL = "sDecompteSeconde[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 43;
	TREE_LEVEL = 1;
	PARENT = 30;
}

DISPLAY_LINE
{
	CHANNEL = "sDecompteSeconde[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 44;
	TREE_LEVEL = 1;
	PARENT = 30;
}

DISPLAY_LINE
{
	CHANNEL = "inSecondes";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 45;
	TREE_LEVEL = 0;
	CHILDREN = 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59;
}

DISPLAY_LINE
{
	CHANNEL = "inSecondes[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 46;
	TREE_LEVEL = 1;
	PARENT = 45;
}

DISPLAY_LINE
{
	CHANNEL = "inSecondes[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 47;
	TREE_LEVEL = 1;
	PARENT = 45;
}

DISPLAY_LINE
{
	CHANNEL = "inSecondes[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 48;
	TREE_LEVEL = 1;
	PARENT = 45;
}

DISPLAY_LINE
{
	CHANNEL = "inSecondes[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 49;
	TREE_LEVEL = 1;
	PARENT = 45;
}

DISPLAY_LINE
{
	CHANNEL = "inSecondes[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 50;
	TREE_LEVEL = 1;
	PARENT = 45;
}

DISPLAY_LINE
{
	CHANNEL = "inSecondes[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 51;
	TREE_LEVEL = 1;
	PARENT = 45;
}

DISPLAY_LINE
{
	CHANNEL = "inSecondes[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 52;
	TREE_LEVEL = 1;
	PARENT = 45;
}

DISPLAY_LINE
{
	CHANNEL = "inSecondes[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 53;
	TREE_LEVEL = 1;
	PARENT = 45;
}

DISPLAY_LINE
{
	CHANNEL = "inSecondes[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 54;
	TREE_LEVEL = 1;
	PARENT = 45;
}

DISPLAY_LINE
{
	CHANNEL = "inSecondes[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 55;
	TREE_LEVEL = 1;
	PARENT = 45;
}

DISPLAY_LINE
{
	CHANNEL = "inSecondes[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 56;
	TREE_LEVEL = 1;
	PARENT = 45;
}

DISPLAY_LINE
{
	CHANNEL = "inSecondes[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 57;
	TREE_LEVEL = 1;
	PARENT = 45;
}

DISPLAY_LINE
{
	CHANNEL = "inSecondes[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 58;
	TREE_LEVEL = 1;
	PARENT = 45;
}

DISPLAY_LINE
{
	CHANNEL = "inSecondes[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 59;
	TREE_LEVEL = 1;
	PARENT = 45;
}

DISPLAY_LINE
{
	CHANNEL = "sEtatTemp";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 60;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "inSyncTemp";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 61;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "outImpSeconde";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 62;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "outSyncTemp";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 63;
	TREE_LEVEL = 0;
}

TIME_BAR
{
	TIME = 16325;
	MASTER = TRUE;
}
;
